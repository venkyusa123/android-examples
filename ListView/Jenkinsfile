pipeline {
    agent any
   stages {
        stage('Dependencies') {
            steps {
                sh 'export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64'
                sh 'export PATH=$PATH:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin:/usr/lib/jvm/java-1.8.0-openjdk-amd64/jre/bin'
                sh 'echo $JAVA_HOME'
            }
        }
        stage('Clean Build') {
            steps {
                    dir("ListView") {
					sh "pwd"
                    sh 'ls -al'
                    sh './gradlew clean'
				}

            }
        }
        stage('Debug apk creation ') {
            when {
                branch 'develop'
            }
            steps {
                    dir("ListView") {
					sh "pwd"
                    sh "./gradlew assembleDebug"
				}
            }
        }
        stage('SauceLab debug apk') {
            when {
                branch 'develop'
            }
	
            steps {

                    dir("ListView") {
                         sh("curl -u \"iot_carlsbad:193C0657897B4D9C8F8811EEECBDF0FB\" -X POST https://app.testobject.com:443/api/storage/upload -H \"Content-Type: application/octet-stream\" --data-binary @app/build/outputs/apk/debug/app-debug.apk")

                }
            }
        }
        stage("Send Debug apk over email") {
            when {
                branch 'develop'
            }
            steps {
                script {
                    archiveArtifacts artifacts : 'ListView/app/build/outputs/apk/debug/*.apk', fingerprint: true
                    def isStartedByUser = currentBuild.rawBuild.getCause(hudson.model.Cause$UserIdCause) != null
                    if (!isStartedByUser) {
                        sh 'echo "build started by git commit"'
                        emailext body: 'A Test EMail', subject: 'Test', to: 'default@gmail.com'
                    }else {
                        // Get the input
                        def userInput = input( 
                            id: 'userInput',
                            message: 'Enter email',
                            parameters: [
                                [
                                    $class: 'StringParameterDefinition',
                                    defaultValue: '',
                                    description: 'Pleae enter your email, otherwise default behavoir will be executed by script',
                                    name: 'UserEmail']
                                ]
                            )
                        echo ("Image tags: "+ userInput)
                        if ( userInput == '' ){
                            wrap([$class: 'BuildUser']) {
                                emailext body: 'A Test EMail', subject: 'Test', to: "${BUILD_USER_EMAIL}" 
                                sh 'echo "build started by ${BUILD_USER_EMAIL}"'
                            }
                        }else {
                            emailext attachmentsPattern: 'ListView/app/build/outputs/apk/debug/*.apk', body: 'A Test EMail', subject: 'Test', to: userInput
                            echo ("build started by: " + userInput ) 
                        }
                    }
                }
        }
        stage('Release apk creation ') {
            when {
                branch 'production'
            }
            steps {
                    sh "pwd"
                    sh("./gradlew :app:assembleRelease")
            }
        }
        stage("Send Release apk over email ") {
            when {
                branch 'production'
            }
            steps {
                script {
                    sh("aws s3 cp ./app/build/outputs/apk/release/app-release-unsigned.apk s3://fluidra-android-builds/${BUILD_NUMBER}/release/app-release-unsigned.apk	")
                    def isStartedByUser = currentBuild.rawBuild.getCause(hudson.model.Cause$UserIdCause) != null
                    startEmailProcess(isStartedByUser, 'release')
                }
            }
        }

    }
}
